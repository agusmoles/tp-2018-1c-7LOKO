-------------------------------PLANIFICADOR   -   CLIENTE--------------------------------------------

PLANIFICADOR ENVIA HANDSHAKE: ******PLANIFICADOR HANDSHAKE******


-------------------------------COORDINADOR   -   CLIENTES--------------------------------------------

COORDINADOR ENVIA HANDSHAKE: ******COORDINADOR HANDSHAKE******

Para verificar si el cliente que se conecto al coordinador es el planificador o las instancias, se recibirá un segundo mensaje del cliente siendo un numero:

COORDINADOR RECIBE UN 1: EL PLANIFICADOR SE HA CONECTADO

COORDINADOR RECIBE UN 2: INSTANCIA SE HA CONECTADO

COORDINADOR RECIBE UN 3: ESI SE HA CONECTADO

------------------------	ESI	   ------------------------

Cuando el Planificador lo decida, envia un EXEOR para indicarle al ESI que debe ejecutar.

El ESI envia un mensaje al Coordinador solicitando recurso, segun instruccion:
GET_Recurso
SET_Recurso_Valor
STR_Recurso

----------------------------------- ENVIO DE MENSAJES -------------------------------------------

Todos los mensajes se van a mandar a traves de un Header que contiene el Codigo de Operacion y el Tamaño de la Clave (o lo que sea que va a recibir)

COD. OP

0. Para indicar que es una operacion de GET
1. Para indicar que es una operacion de SET
2. Para indicar que es una operacion de STR
3. Para indicar que es una operacion del comando Status del Planificador
4. Clave larga

El Planificador, luego de recibir una sentencia por parte del Coordinador, le devuelve a éste un 0 si el ESI se bloqueo/aborto y un 1 si se ejecuto con normalidad.

El Planificador, luego de recibir una sentencia STORE además, envia al Coordinador un 1  si hay que mandarle a un ESI que se desbloqueo un OPOK para que siga ejecutando (junto con su ID) o un 0 si no.

------------------------------------- COMANDO STATUS -----------------------------------------

El Coordinador tiene un servidor dedicado al manejo de este comando y el Planificador se conecta apenas inicia.

Cuando se ejecute el "status clave" en la consola, la secuencia va a ser:

1. Planificador envia tamaño de clave
2. Planificador envia clave
3. Planificador recibe tamaño del valor almacenado y, en caso de no tenerlo, un -1
4. Si no lo tiene, solo manda en que instancia (un INT) se guardaria el valor (sin efecto en el algoritmo para el proximo guardado de valor)
5. Si lo tiene, manda el valor y luego en que instancia esta guardado